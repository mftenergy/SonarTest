name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install SonarCloud Scanner
      if: ${{ github.event_name == 'pull_request' }}
      run: dotnet tool install --global dotnet-sonarscanner

    - name: cache sonar scanner
      id: cache-sonar
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: Begin sonar scan
      run: |
        dotnet sonarscanner begin \
        /k:"mftenergy_SonarTest" \
        /o:"mftenergy" \
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        /d:sonar.cs.roslyn.ignoreIssues=true
        /d:sonar.test.exclusions="**/obj/**,**/bin/**,**/*.dll,**/*.exe,**/*.xml,**/*tests*/**/*"
        /d:sonar.test.inclusions="**/*tests*/**/*"
        /d:sonar.coverage.exclusions="**/Program.cs"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build
      run: dotnet build --configuration Release

    - name: End sonar scan
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
