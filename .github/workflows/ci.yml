name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SonarCloud Scanner
      if: ${{ github.event_name == 'pull_request' }}
      run: dotnet tool install --global dotnet-sonarscanner

    - name: cache sonar scanner
      id: cache-sonar
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v3
      if: ${{ github.event_name == 'pull_request' }}
      with:
        args: >
          -Dsonar.organization=mftenergy
          -Dsonar.projectKey=mftenergy_SonarTest
          -Dsonar.cs.opencover.reportsPaths=**/TestResults/**/coverage.opencover.xml
          -Dsonar.cs.roslyn.ignoreIssues=true
          -Dsonar.test.exclusions=**/obj/**,**/bin/**,**/*.dll,**/*.exe,**/*.xml,**/*tests*/**/*
          -Dsonar.test.inclusions=**/*tests*/**/*
          -Dsonar.coverage.exclusions=**/Program.cs
          -Dsonar.scm.provider=git
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
